
const Capi = require('qcloudapi-sdk')
const tencentcloud=require('tencentcloud-sdk-nodejs')
const R=require('ramda')

const API={
  "account": 2,
  "apigateway": 2,
  "athena": 2,
  "bgpip": 2,
  "bill": 2,
  "ccr": 2,
  "ccs": 2,
  "cmem": 2,
  "cns": 2,
  "dfw": 2,
  "eip": 2,
  "feecenter": 2,
  "image": 2,
  "lb": 2,
  "market": 2,
  "scaling": 2,
  "sec": 2,
  "snapshot": 2,
  "tdsql": 2,
  "trade": 2,
  "wenzhi": 2,

  "aai": 3,
  "ame": 3,
  "as": 3,
  "asr": 3,
  "batch": 3,
  "billing": 3,
  "bizlive": 3,
  "bm": 3,
  "bmeip": 3,
  "bmlb": 3,
  "bmvpc": 3,
  "bri": 3,
  "cam": 3,
  "captcha": 3,
  "cbs": 3,
  "cdb": 3,
  "cdn": 3,
  "cds": 3,
  "cfs": 3,
  "chdfs": 3,
  "cim": 3,
  "cis": 3,
  "clb": 3,
  "cloudaudit": 3,
  "cme": 3,
  "cms": 3,
  "common": 3,
  "cpdp": 3,
  "cr": 3,
  "cvm": 3,
  "cws": 3,
  "dayu": 3,
  "dbbrain": 3,
  "dc": 3,
  "dcdb": 3,
  "domain": 3,
  "drm": 3,
  "ds": 3,
  "dts": 3,
  "ecc": 3,
  "emr": 3,
  "es": 3,
  "facefusion": 3,
  "faceid": 3,
  "fmu": 3,
  "gaap": 3,
  "gme": 3,
  "gs": 3,
  "habo": 3,
  "hcm": 3,
  "iai": 3,
  "ic": 3,
  "iot": 3,
  "iotcloud": 3,
  "iotexplorer": 3,
  "iottid": 3,
  "kms": 3,
  "live": 3,
  "mariadb": 3,
  "mongodb": 3,
  "monitor": 3,
  "mps": 3,
  "ms": 3,
  "msp": 3,
  "nlp": 3,
  "ocr": 3,
  "organization": 3,
  "partners": 3,
  "postgres": 3,
  "redis": 3,
  "scf": 3,
  "smpn": 3,
  "sms": 3,
  "soe": 3,
  "sqlserver": 3,
  "ssm": 3,
  "sts": 3,
  "tag": 3,
  "tav": 3,
  "tbaas": 3,
  "tbm": 3,
  "tbp": 3,
  "tcaplusdb": 3,
  "tcb": 3,
  "tci": 3,
  "tia": 3,
  "ticm": 3,
  "tics": 3,
  "tiems": 3,
  "tiia": 3,
  "tiw": 3,
  "tke": 3,
  "tkgdq": 3,
  "tmt": 3,
  "trtc": 3,
  "tsf": 3,
  "tts": 3,
  "vod": 3,
  "vpc": 3,
  "wss": 3,
  "youmall": 3,
  "yunjing": 3,
  "yunsou": 3
}

const v2=require("./v2")
const v3=require("./v3")

const conn=({
        SecretId,
        SecretKey,
        Region="ap-shanghai",
        serviceType = 'apigateway',
   }=process.env
)=>{
    if (R.has(serviceType)(API)){
        let v= API[serviceType] == 2 ? v2 : v3
        return v.conn({SecretId,SecretKey,serviceType,Region})
    }else{
        throw "wrong serviceType"
    }
}

module.exports=conn

